/*
* Copyright (c) 2021 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAIN 0 
#define SYM 1 
#define NUM 2 
#define MOUSE_TP 3
#define MOUSE_TP_SET 4
#define SCROLL 5

#define HAS_MOUSE_KEYS
#define HAS_MOUSE_TP

#ifdef HAS_MOUSE_KEYS
  #include <dt-bindings/zmk/mouse.h>
  #include <behaviors/mouse_keys.dtsi>
#endif  // HAS_MOUSE_KEYS

#ifdef HAS_MOUSE_TP
  // We store the trackpoint settings in a separate file
  // to make organization a little easier.
  #include "../../../include/mouse_tp.dtsi"
#endif  // HAS_MOUSE_TP

// Adjust layer keys based on enabled features.
//
// This prevents build errors when we build the firmware
// without the mouse keys PR or the TP module.
#ifdef HAS_MOUSE_KEYS
  #define U_THUMB_INNER &mo MOUSE_KEYS
#else
  #define U_THUMB_INNER &none
#endif  // HAS_MOUSE_KEYS

#ifdef HAS_MOUSE_TP
  #define U_TOG_TP_SET &tog MOUSE_TP_SET
#else
  #define U_TOG_TP_SET &none
#endif  // HAS_MOUSE_TP

/ {

  combos { compatible = "zmk,combos"; };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
        };
    };


    keymap {
      compatible = "zmk,keymap";

      MAIN_layer {
          display-name = "Default";
            bindings = <
              &kp Q        &kp W       &kp E       &kp R         &kp T                              &kp Y        &kp U         &kp I        &kp O       &kp P              
              &hm LCTRL A  &hm LALT S  &hm LGUI D  &hm LSHFT F   &kp G              &mkp MCLK       &kp H        &hm RSHFT J   &hm RGUI K   &hm RALT L  &hm RCTRL SEMICOLON 
              &kp Z        &kp X       &kp C       &kp V         &kp B        &mkp LCLK  &mkp RCLK  &kp N        &kp M         &kp COMMA    &kp PERIOD  &kp SLASH            
                                       &lt 4 TAB   &mo 1         &lt 2 SPACE        &mkp RCLK       &lt 1 BSPC   &lt 5 ESC     &mo 3       
            >; 
      };
      SYM {
            bindings = <
              &kp GRAVE     &kp CARET     &kp POUND     &kp AMPS      &kp PIPE                       &kp PLUS    &kp LBRC   &kp RBRC   &kp N9  &kp N0   
              &kp EXCL      &kp QMARK     &kp COLON     &kp EQUAL     &kp DLLR       &trans          &kp MINUS   &kp LPAR   &kp RPAR   &kp LT  &kp GT   
              &kp PRCNT     &kp QMARK     &kp STAR      &kp PLUS      &kp BSLH    &trans  &trans     &kp AT      &kp LBKT   &kp RBKT   &trans  &trans   
                                          &trans        &trans        &trans         &trans          &trans      &kp RSHFT  &trans   
            >;
      };
      NUM {
            bindings = <
              &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                   &kp N6  &kp N7  &kp N8  &kp N9  &kp N0 
              &trans  &trans  &trans  &trans  &trans        &trans     &trans  &trans  &trans  &trans  &trans 
              &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  
                              &trans  &trans  &trans       &trans      &trans  &trans  &trans  
            >;
      };

#ifdef HAS_MOUSE_TP

    // Automatically activated when the mouse or trackpoint moves.
    // Configured in `include/mouse_tp.dtsi`.
    MouseTP_layer {
      display-name = "TP";
      bindings = <
              &trans  &trans  &trans  &trans  &trans                   &trans  &trans  &trans  &trans  &trans 
              &trans  &trans  &trans  &trans  &trans        &trans     &trans  &trans  &trans  &trans  &trans  
              &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans
                              &trans  &trans  &trans       &trans      &trans  &trans  &trans       
            >; 
    };

    // You can find the defines for the actual key press behaviors in `include/mouse_tp.dtsi`.
    MouseSettings_layer {
      display-name = "TP Settings";
      bindings = <
              &trans  &trans  &trans  &trans  &trans                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  
              &trans  &trans  &trans  &trans  &trans        &trans     &bt BT_CLR    &trans        &trans        &trans        &trans       
              &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans        &trans        &trans        &trans        &trans      
                              &trans  &trans  &trans       &trans      &trans        &trans        &trans         
            >; 
    };

    SCROLL {
      display-name = "Scroll";
      bindings = <
              &trans  &trans  &trans  &trans  &trans                   &trans  &trans    &kp UP    &trans     &trans  
              &trans  &trans  &trans  &trans  &trans        &trans     &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  
              &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans    &trans    &trans     &trans 
                              &trans  &trans  &trans       &trans      &trans  &trans    &trans          
            >; 
    };

#endif
    };
};